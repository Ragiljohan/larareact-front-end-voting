{"version":3,"sources":["asset/image/index.js","utils/api.js","pages/Home/HeaderComp.jsx","pages/Home/FooterComp.jsx","pages/Home/index.jsx","pages/Voting/Loading.jsx","pages/Voting/ListKandidat.jsx","pages/Voting/index.jsx","router/index.js","App.js","serviceWorker.js","index.js","asset/image/vote.svg","asset/image/waves.svg","asset/image/avatar.jpeg"],"names":["imgVote","require","waves","avatar","BASE_URL","URL_API","HeaderComp","props","_handleFormChange","event","formData","state","form","target","name","value","setState","_handleFormSubmit","token","messageErr","_authLogin","a","axios","post","response","data","status","console","log","localStorage","setItem","results","history","push","message","redirect","this","Aos","init","once","easing","className","data-aos","data-aos-duration","data-aos-delay","type","onChange","id","placeholder","onClick","src","alt","Component","withRouter","FooterComp","style","marginTop","href","icon","size","index","background","color","time","Loading","count","height","width","circle","ListKandiad","onClickVisi","_cekLogin","_getKandidat","Axios","get","kandidat","isLoading","_confirmPilihan","kandidat_id","Swal","fire","title","text","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","cancelButtonText","then","result","_postPilihan","getItem","removeItem","go","_showVisiMisi","visi","misi","html","imageUrl","imageWidth","imageHeight","imageAlt","map","item","i","path","exact","component","Home","Voting","App","library","add","fab","faCheckSquare","faCoffee","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","module","exports"],"mappings":"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","file":"static/js/main.6c1e5e30.chunk.js","sourcesContent":["const imgVote = require('./vote.svg');\nconst waves = require('./waves.svg');\nconst avatar = require('./avatar.jpeg');\n\nexport {\n    imgVote,\n    waves,\n    avatar\n}","const BASE_URL = 'https://evotingreact.betechdeveloper.com/admin/public';\nconst URL_API =  BASE_URL +  '/api/';\n\nexport {\n    BASE_URL,\n    URL_API\n}","import React, { Component } from 'react'\nimport { imgVote } from '../../asset';\nimport Aos from 'aos';\nimport './index.css';\nimport { URL_API } from '../../utils/api';\nimport axios from 'axios';\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from \"react-router-dom\";\n\nclass HeaderComp extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            form: {\n                token: ''\n            },\n            messageErr: '',\n            redirect: '/voting'\n        }\n    }\n\n    _handleFormChange = (event) => {\n        let formData = { ...this.state.form }\n        formData[event.target.name] = event.target.value;\n        this.setState({\n            form: formData\n        })\n    }\n\n    _handleFormSubmit = () => {\n        const state = this.state;\n        if (state.form.token == '') {\n            this.setState({\n                messageErr: 'Harap masukan token'\n            })\n        } else {\n            this._authLogin();\n        }\n    }\n\n    _authLogin = async () => {\n        try {\n            const response = await axios.post(URL_API + 'login', this.state.form);\n            const data = response.data;\n            if (data.status == 'success') {\n                console.log(data)\n                    localStorage.setItem('token',data.results.token);\n                   this.props.history.push('/voting')\n            } else {\n                this.setState({\n                    messageErr: data.message\n                })\n            }\n\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    componentDidMount() {\n        console.log(this.props);\n        Aos.init({\n            once: true,\n            easing: 'slide',\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\" data-aos=\"zoom-in\" data-aos-duration=\"700\" data-aos-delay=\"50\">\n                    <div className=\"col-md-6 pt-5 mt-2\" >\n                        <span className=\"title\" >\n                            evoting app\n                        </span>\n                        <br />\n                        <span className=\"subtitle mt-1 mb-2\">\n                            Selamat datang di aplikasi evoting silahkan login untuk memilih\n                        </span>\n                        <div className=\"row mt-3\">\n                            <div className=\"col\">\n                                <input type=\"text\" name=\"token\" onChange={this._handleFormChange} id=\"\" className=\"form-control\" placeholder=\"Masukan token disini\" value={this.state.form.token} />\n                                <small className=\"text-danger\">{this.state.messageErr}</small>\n                            </div>\n                            <div>\n                                <button className=\"btn btn-primary mr-2\" onClick={this._handleFormSubmit}>Masuk</button>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"col-md-6 pt-5 text-center\">\n                        <img src={imgVote} alt=\"\" className=\"img-fluid\" data-aos=\"zoom-in\" data-aos-duration=\"700\" data-aos-delay=\"50\" />\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(HeaderComp)","import React, { Component } from 'react'\nimport { waves, avatar } from '../../asset';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nexport default class FooterComp extends Component {\n    render() {\n        return (\n            <div>\n                <div style={{ marginTop: -30 }}>\n                    <img src={waves} alt=\"\" />\n                </div>\n                <div className=\"bg-biru\">\n                    <div className=\"container pb-5\">\n                        <div className=\"row\">\n                            <div className=\"col-md-4\">\n                                <img src={avatar} alt=\"\" className=\"img-fluid rounded-circle img-thumbnail \" />\n                            </div>\n                            <div className=\"col-md-8\">\n                                <span className=\"titlename text-white\">\n                                    halo ! saya fikri suheri\n                                </span>\n                                <p className=\"text-white\">\n                                    Saya masih seorang junior programmer lulusan SMK tahun 2020, saat ini saya membutuhkan lowongan pekerjaan di bidang programming apabila Bapak/Ibu berniat untuk mempekerjakan saya bisa kontak whatsapp saya <a href=\" https://api.whatsapp.com/send?phone=6281222627526\">Disini</a>. Saya juga menerima pemesanan pembuatan aplikasi silahkan di cek portofolio saya  di bawah ini\n                                </p>\n                                <a target=\"_blank\" href=\"https://www.instagram.com/suhericode/\" className=\"mr-4\"><FontAwesomeIcon icon={['fab', 'instagram']} size=\"6x\" /></a>\n                                <a target=\"_blank\" href=\"https://github.com/fikrisuheri\"><FontAwesomeIcon icon={['fab', 'github']} size=\"6x\" /></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport Aos from 'aos';\nimport './index.css';\nimport HeaderComp from './HeaderComp';\nimport FooterComp from './FooterComp';\nimport { Sugar } from 'react-preloaders';\n\nexport default class index extends Component {\n\n    componentDidMount() {\n        Aos.init({\n            once: true,\n            easing: 'slide',\n        });\n    }\n\n    render() {\n        return (\n            <div>\n                <Sugar background=\"#1e2125\" color=\"#0f4c75\" time={1000} />\n                <HeaderComp />\n                <FooterComp />\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton';\nexport default function Loading() {\n\n    return (\n        <div className=\"col-md-3 col-sm-4\">\n            <div className=\"card mb-4\">\n                <div className=\"card-body\">\n                    <Skeleton count={1} height={125} width={125} circle={true} />\n                    <Skeleton count={1} height={25} className=\"mt-3\" />\n                    <Skeleton count={1} height={150} className=\"mt-3\" />\n                </div>\n            </div>\n        </div>\n\n    )\n}\n","import React, { useEffect } from 'react'\nimport { BASE_URL, URL_API } from '../../utils/api'\nimport Aos from 'aos'\nimport Axios from 'axios';\nexport default function ListKandiad({ name, id, avatar,onClick,onClickVisi }) {\n\n    return (\n        <div className=\"col-md-3\">\n            <div className=\"card mb-4 p-3\" data-aos=\"zoom-in\" data-aos-duration=\"700\" data-aos-delay=\"50\">\n                <img className=\"card-img-top rounded-circle img-fluid\" src={BASE_URL + '/storage/' + avatar} />\n                <div className=\"card-body\">\n                    <h5 className=\"card-title text-uppercase\">{name}</h5>\n                    <button className=\"btn btn-secondary btn-block\" onClick={onClickVisi}>Lihat Visi Misi</button>\n                    <button className=\"btn btn-primary btn-block\" onClick={onClick}>Pilih {name}</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Component } from 'react'\nimport './index.css';\nimport Loading from './Loading'\nimport ListKandidat from './ListKandidat'\nimport Axios from 'axios';\nimport { URL_API, BASE_URL } from '../../utils/api'\nimport Aos from 'aos'\nimport Swal from 'sweetalert2'\n\nexport default class index extends Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            token: localStorage.getItem('token'),\n            kandidat: [],\n            isLoading: true\n        }\n    }\n\n    _cekLogin = () => {\n        const token = this.state.token;\n\n        if (token === '' || token === null) {\n            this.props.history.push('/')\n        }\n    }\n\n    _getKandidat = async () => {\n        try {\n            const response = await Axios.get(URL_API + 'kandidat')\n            this.setState({\n                kandidat: response.data.results,\n                isLoading: false\n            })\n        } catch (error) {\n\n        }\n    }\n\n    componentDidMount() {\n        this._cekLogin()\n        this._getKandidat()\n        Aos.init({\n            once: true,\n            easing: 'slide',\n        });\n    }\n\n    _confirmPilihan = (kandidat_id, name) => {\n        Swal.fire({\n            title: 'Yakin Memilih ' + name,\n            text: \"Suara yang anda pilih dijamin kerahasiaannya !\",\n            icon: 'question',\n            showCancelButton: true,\n            confirmButtonColor: '#3085d6',\n            cancelButtonColor: '#d33',\n            confirmButtonText: 'Ya, Pilih ' + name + ' !',\n            cancelButtonText: 'Batalkan !',\n        }).then((result) => {\n            if (result.value) {\n                this._postPilihan(kandidat_id)\n            }\n        })\n    }\n\n    _postPilihan = async (kandidat_id) => {\n        try {\n\n            const data = {\n                'token': localStorage.getItem('token'),\n                'kandidat_id': kandidat_id\n            }\n            const response = await Axios.post(URL_API + 'voting', data)\n            if (response.data.status == 'success') {\n                localStorage.removeItem('token')\n                this.props.history.go('/')\n            }\n        } catch (error) {\n\n        }\n    }\n\n    _showVisiMisi = (name, avatar, visi, misi) => {\n        return (\n            Swal.fire({\n                title: name,\n                html:\n                    visi + misi,\n                imageUrl: BASE_URL + '/storage/' + avatar,\n                imageWidth: 200,\n                imageHeight: 200,\n                imageAlt: 'Custom image',\n            })\n        )\n    }\n\n    render() {\n        const state = this.state;\n        return (\n            <div>\n                <div className=\"container text-center mt-4\">\n                    <h3 className=\"title\" data-aos=\"zoom-in\" data-aos-duration=\"700\" data-aos-delay=\"50\">Daftar Kandidat Evoting</h3>\n                    <div className=\"row mt-4\">\n                        {\n                            state.isLoading\n                                ?\n                                <>\n                                    <Loading />\n                                    <Loading />\n                                    <Loading />\n                                    <Loading />\n                                </>\n                                :\n                                state.kandidat.map((item, i) => (\n                                    <ListKandidat\n                                        name={item.name}\n                                        avatar={item.avatar}\n                                        onClick={() => this._confirmPilihan(item.id, item.name)}\n                                        onClickVisi={() => this._showVisiMisi(item.name, item.avatar, item.visi, item.misi)} />\n                                ))\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n","import React from 'react'\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { Home,Voting } from '../pages';\nexport default function index() {\n    return (\n        <div>\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\" exact component={Home} />\n                    <Route path=\"/voting\" component={Voting} />\n                </Switch>\n            </BrowserRouter>\n        </div>\n    )\n}\n","import React, { Fragment } from 'react'\nimport Router from './router';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'aos/dist/aos.css'; \nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\nimport { faCheckSquare, faCoffee } from '@fortawesome/free-solid-svg-icons'\nlibrary.add(fab, faCheckSquare, faCoffee)\n\nexport default function App() {\n  return (\n      <Router />\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/vote.8db06df2.svg\";","module.exports = __webpack_public_path__ + \"static/media/waves.e609e916.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.f3f6c03a.jpeg\";"],"sourceRoot":""}